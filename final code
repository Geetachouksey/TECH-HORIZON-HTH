from machine import Pin, I2C, ADC, SPI, PWM
import time, os
import sh1106
import sdcard
from max30100 import MAX30100

# ------------------- ECG Sensor -------------------
ecg = ADC(Pin(26))  # GP26 = ADC0

# ------------------- MAX30100 SpO2 -------------------
i2c1 = I2C(0, scl=Pin(5), sda=Pin(4))
try:
    spo2_sensor = MAX30100(i2c1)
    print("MAX30100 initialized!")
except OSError as e:
    print("MAX30100 Error:", e)
    spo2_sensor = None

# ------------------- OLED SH1106 -------------------
i2c2 = I2C(1, scl=Pin(7), sda=Pin(6), freq=400000)
oled = sh1106.SH1106_I2C(128, 64, i2c2)
oled.fill(0)
oled.text("System Init...", 0, 0)
oled.show()

# ------------------- Vibration Sensor -------------------
vibration = Pin(10, Pin.IN, Pin.PULL_DOWN)

# ------------------- SD Card -------------------
spi = SPI(0, baudrate=100000,
          polarity=0, phase=0,
          sck=Pin(18), mosi=Pin(19), miso=Pin(16))
cs = Pin(20, Pin.OUT)

try:
    sd = sdcard.SDCard(spi, cs)            # low-level SD card
    vfs = os.VfsFat(sd)                    # wrap with FAT filesystem
    os.mount(vfs, "/sd")                   # âœ… correct mount
    print("SD card mounted at /sd")
except Exception as e:
    print("SD card Error:", e)
    sd = None

# ------------------- Buzzer -------------------
buzzer = PWM(Pin(21))
buzzer.duty_u16(0)

def play_tone(freq, duration=500):
    buzzer.freq(freq)
    buzzer.duty_u16(30000)
    time.sleep_ms(duration)
    buzzer.duty_u16(0)
    time.sleep_ms(50)

def play_music():
    melody = [440, 494, 523, 587, 659, 698, 784]
    for note in melody:
        play_tone(note, 300)

# ------------------- ECG Waveform Buffer -------------------
waveform = [32] * 128
x_pos = 0

# ------------------- Main Loop -------------------
while True:
    ecg_value = ecg.read_u16()
    ecg_voltage = (ecg_value / 65535) * 3.3
    y = 63 - int((ecg_value / 65535) * 63)
    waveform[x_pos] = y

    ir, red, oxygen = (0, 0, 98)
    if spo2_sensor:
        try:
            ir, red = spo2_sensor.read_fifo()
            oxygen = 85 + ((red % 100) / 2)
            if oxygen > 100:
                oxygen = 99
        except Exception:
            pass

    vib_status = "YES" if vibration.value() == 1 else "NO"

    oled.fill(0)
    for x in range(127):
        oled.pixel(x, waveform[x], 1)
    oled.text("SpO2:{}%".format(int(oxygen)), 0, 0)
    oled.text("VIB:{}".format(vib_status), 0, 10)
    oled.show()

    x_pos = (x_pos + 1) % 128

    if oxygen < 90:
        oled.fill(0)
        oled.text("You are stressed", 0, 20)
        oled.show()
        time.sleep(1)

        oled.fill(0)
        oled.text("Breathe In", 0, 16)
        oled.text("Breathe Out", 0, 32)
        oled.text("Music Tips...", 0, 48)
        oled.show()

        play_music()

        if sd:
            try:
                with open("/sd/stress_log.txt", "a") as f:
                    f.write("Low SpO2: {}%\n".format(oxygen))
            except Exception as e:
                print("SD write error:", e)

    if vibration.value() == 1:
        oled.fill(0)
        oled.text("Object Detected!", 0, 20)
        oled.show()
        play_tone(800, 200)

    time.sleep(0.05)
